// Copyright (c) 2023 Pascal Riesinger
// SPDX-License-Identifier: MIT
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer aliases
#define LEF 1
#define RIG 2
#define TRI 3

// Home row mods macro
#define HRML(k1,k2,k3,k4) &hrm LSHFT k1 &hrm LCTRL k2 &hrm LALT k3  &hrm LGUI k4
#define HRMR(k1,k2,k3,k4) &hrm RGUI k1  &hrm RALT k2  &hrm RCTRL k3 &hrm RSHFT k4

#define HYPER(k) &kp LS(LC(LA(LG(k))))

// Shorter names for some keys
#define K_BACK C_AC_BACK
#define K_FWD C_AC_FORWARD

// Screen grabs
#define K_SG_CLIP LS(LC(LG(N4)))
#define K_SG_TOOL LS(LG(N3))

// Legend: Mod-Tap: <Hold>@<Tap>
/ {
    behaviors {
        hrm: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                // |  TAB        |  Q          |  W          |  E          |  R          |  T          |                               |  Y          |  U          |  I          |  O          |  P          |  ⌫          |
                      &kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                                         &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |  CTRL@ESC   |  A          |  S          |  D          |  F          |  G          |                               |  H          |  J          |  K          |  L          |  ;          |  '          |
                    &mt LCTRL ESC   HRML(A,       S,            D,            F)            &kp G                                         &kp H         HRMR(J,       K,            L,            SEMI)         &kp SQT
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |  SHIFT      |  Z          |  X          |  C          |  V          |  B          |                               |  N          |  M          |  ,          |  .          |  /          |  SHIFT      |
                      &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B                                         &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RSHFT
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                //                                                                       |  ⌫ / LEF    |  ENTER      |   |  SPACE      | TAB / RIG   |
                                                                                       &ht &mo LEF &kb BSPC &kp RET        &kp SPACE &ht &mo RIG &kp TAB
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };

        left_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                // |  `          |  1          |  2          |  3          |  4          |  5          |                               |  6          |  7          |  8          |  9          |  0          |  ⌫          |
                      &kp GRAVE     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |             |  !          |  @          |  #          |  $          |  %          |                               |  %          |  &          |  *          |  (          |  )          |  |          |
                      &trans        &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                                     &kp CARET     &kp AMPS   &kp KP_MULTIPLY  &kp LPAR      &kp RPAR      &kp PIPE
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |             |  =          |  -          |  +          |  {          |  }          |                               |  [          |  ]          |  ;          |  :          |  \          |             |
                      &trans        &kp EQUAL     &kp MINUS     &kp KP_PLUS   &kp LBRC      &kp RBRC                                      &kp LBKT      &kp RBKT      &kp SEMI      &kp COLON     &kp BSLH      &trans
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                //                                                                       |             |             |   |             |             |
                                                                                            &trans        &trans            &trans        &trans
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };

        right_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                // |             |  F1         |  F2         |  F3         |  F4         |             |                               |  ⏮️         ︎|  🔈         |  🔊        |  ⏭️         |  🔇         |  ⏯️         |
                      &trans        &kp F1        &kp F2        &kp F3        &kp F4        &trans                                        &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT   &kp C_MUTE     &kp C_PP
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |             |  F5         |  F6         |  F7         |  F8         |             |                               |  ←          |  ↓          |  ↑          |  →          |  ⌦          |  ⌫          |
                      &trans        &kp F5        &kp F6        &kp F7        &kp F8        &trans                                        &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp DEL       &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |             |  F9         |  F10        |  F11        |  F12        |             |                               |  HOME       |  PGDOWN     |  PGUP       |  END        |             |             |
                      &trans        &kp F9        &kp F10       &kp F11       &kp F12       &trans                                        &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &trans        &trans
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                //                                                                       |             |             |   |             |             |
                                                                                            &trans        &trans            &trans        &trans
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };

        tri_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                // |             |  HYPER Q    |  HYPER Q    |  HYPER E    |  HYPER R    |  HYPER T    |                               |  BT0        |  BT1        |  BT2        |  BT3        |             |  BT CLEAR   |
                      &trans        HYPER(Q)     HYPER(W)       HYPER(E)      HYPER(R)      HYPER(T)                                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &trans        &bt BT_CLR
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |             |  HYPER A    |  HYPER S    |  HYPER D    |  HYPER F    |  HYPER G    |                               |  BACK       |  ↓          |  ↑          |  FORWARD    |  ⌦          |  ⌫          |
                      &trans        HYPER(A)     HYPER(S)       HYPER(D)      HYPER(F)      HYPER(G)                                      &kp K_BACK    &kp DOWN      &kp UP        &kp K_FWD     &kp DEL       &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                // |             |  HYPER Z    |  HYPER X    |  HYPER C    |  HYPER V    |  HYPER B    |                               |  SG Menu    |  SG Clip    |  PGUP       |  END        |             | TOGGLE CONN |
                      &trans        HYPER(Z)     HYPER(X)       HYPER(C)      HYPER(V)      HYPER(B)                                    &kp K_SG_TOOL &kp K_SG_CLIP   &kp PG_UP     &kp END       &trans       &out OUT_TOG
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                //                                                                       |             |             |   |             |             |
                                                                                            &trans        &trans            &trans        &trans
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };
    };
};
