// Copyright (c) 2023 Pascal Riesinger
// SPDX-License-Identifier: MIT
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define HOST_OS 2
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/german.dtsi"

// Layer aliases
#define LEF 1
#define RIG 2
#define TRI 3
#define GER 4

// Home row mods macro
#define HRML(k1,k2,k3,k4) &hrm LSHFT k1 &hrm LCTRL k2 &hrm LALT k3  &hrm LGUI k4

#define HYPER(k) &kp LS(LC(LA(LG(k))))

// Shorter names for some keys
#define BACK C_AC_BACK
#define FWD C_AC_FORWARD

// Screen grabs
#define SG_CLIP LS(LC(LG(N4)))
#define SG_TOOL LS(LG(N3))

#define ___ &trans

// Tap: Backspace | Hold: LEF layer
ZMK_HOLD_TAP(lef_tap, bindings = <&mo>, <&kp>; flavor = "balanced";
             tapping-term-ms = <175>; quick-tap-ms = <100>;)
ZMK_HOLD_TAP(rig_tap, bindings = <&mo>, <&kp>; flavor = "balanced";
             tapping-term-ms = <175>; quick-tap-ms = <100>;)
ZMK_HOLD_TAP(ralt, bindings = <&mo>, <&kp>; flavor = "balanced";
             tapping-term-ms = <175>; quick-tap-ms = <100>;)

ZMK_CONDITIONAL_LAYER(tri, LEF RIG, TRI)

/ {
    behaviors {
        hrm: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            //require-prior-idle = <140>;
            quick-tap-ms = <160>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                      &kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                                         &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    &mt LCTRL ESC   HRML(A,       S,            D,            F)            &kp G                                         &kp H         &hrm RGUI J  &ralt GER K  &hrm RCTRL L &hrm RSHFT SEMI  &kp SQT
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                      &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B                                         &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RSHFT
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                                                                       &lef_tap LEF BSPC  &kp RET            &kp SPACE &rig_tap RIG TAB
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };

        left_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                      &kp GRAVE     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                        &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___        &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                                     &kp CARET     &kp AMPS   &kp KP_MULTIPLY  &kp LPAR      &kp RPAR      &kp PIPE
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___        &kp EQUAL     &kp MINUS     &kp KP_PLUS   &kp LBRC      &kp RBRC                                      &kp LBKT      &kp RBKT      &kp SEMI      &kp COLON     &kp BSLH         ___
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                                                                               ___           ___               ___          ___
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };

        right_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                         ___        &kp F1        &kp F2        &kp F3        &kp F4           ___                                        &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT   &kp C_MUTE     &kp C_PP
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___        &kp F5        &kp F6        &kp F7        &kp F8           ___                                        &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp DEL       &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___        &kp F9        &kp F10       &kp F11       &kp F12          ___                                        &kp HOME      &kp PG_DN     &kp PG_UP     &kp END          ___           ___
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                                                                               ___           ___               ___          ___
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };

        tri_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                         ___        HYPER(Q)     HYPER(W)       HYPER(E)      HYPER(R)      HYPER(T)                                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      ___        &bt BT_CLR
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___        HYPER(A)     HYPER(S)       HYPER(D)      HYPER(F)      HYPER(G)                                      &kp BACK       &kp DOWN      &kp UP        &kp FWD       &kp DEL      &kp BSPC
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___        HYPER(Z)     HYPER(X)       HYPER(C)      HYPER(V)      HYPER(B)                                     &kp SG_TOOL   &kp SG_CLIP    &kp PG_UP      &kp END         ___       &out OUT_TOG
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                                                                               ___           ___               ___          ___
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;

        };

        german_layer {
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                         ___         &de_ae          ___           ___           ___           ___                                         &de_ue          ___           ___         &de_oe          ___           ___
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___           ___        &de_eszett       ___           ___           ___                                          ___            ___           ___           ___           ___           ___
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                               ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                         ___           ___           ___           ___           ___           ___                                          ___            ___           ___           ___           ___           ___
                // ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮   ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                                                                               ___           ___               ___          ___
                //                                                                       ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };
    };
};
